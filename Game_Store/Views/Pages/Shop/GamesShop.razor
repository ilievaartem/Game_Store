@page "/shop"

@inject GameController Controller

<PageTitle>Game Catalog</PageTitle>

@if (games == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <table class="table table-striped table-bordered table-hover mt-2">
            <thead class="table-dark">
                <th>GameId</th>
                <th>Name</th>
                <th>Genres</th>
                <th class="text-end">Price</th>
                <th>Release Date</th>
                <th>Actions</th>
            </thead>
            <tbody>
                @foreach (var game in games)
                {
                    <tr>
                        <td>@game.GameId</td>
                        <td>@game.Name</td>
                        <td>@game.Genre?.Name</td>
                        <td class="text-end">@game.Price.ToString("C2")</td>
                        <td>@game.ReleaseDate</td>
                        <td>
                            <a class="btn btn-primary" role="button" href="@GameUrl(game.GameId)">
                                Buy
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        <nav>
            <ul class="pagination">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <button class="page-link" @onclick="() => LoadPage(currentPage - 1)">Previous</button>
                </li>
                @for (var i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <button class="page-link" @onclick="() => LoadPage(i)">@i</button>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <button class="page-link" @onclick="() => LoadPage(currentPage + 1)">Next</button>
                </li>
            </ul>
        </nav>
    </div>
}

@code {
    private PaginatedList<GameSummary> games;
    private int currentPage = 1;
    private int totalPages;

    protected override async Task OnInitializedAsync()
    {
        await LoadPage(currentPage);
    }

    private async Task LoadPage(int page)
    {
        games = await Controller.GetGamesPagedAsync(page, 10);
        currentPage = page;
        totalPages = games.TotalPages;
    }

    private static string GameUrl(int id) => $"/buygame/{id}";
}
