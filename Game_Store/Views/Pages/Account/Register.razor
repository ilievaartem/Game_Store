@page "/account/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@inject UserManager<UserDetails> UserManager
@inject SignInManager<UserDetails> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="username" class="form-label">Username:</label>
        <InputText id="username" @bind-Value="registerModel.Username" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">Email:</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password:</label>
        <InputText id="password" @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleRegistration()
    {
        var user = new UserDetails
        {
            UserName = registerModel.Username,
            Email = registerModel.Email
        };
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            await SignInManager.SignInAsync(user, isPersistent: false);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // handle registration errors
        }
    }

    public class RegisterModel
    {
        [Required]
        [StringLength(100)]
        public string Username { get; set; }
        
        [Required]
        [DataType(DataType.EmailAddress)]
        [EmailAddress]
        public string Email { get; set; }
        
        [Required]
        [StringLength(100, MinimumLength = 5)]
        public string Password { get; set; }
    }
}
