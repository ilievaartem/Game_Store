@page "/account/register"

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject UserController UserController

<PageTitle>Register</PageTitle>

<h3>Register</h3>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@newUser" OnValidSubmit="HandleSubmit" FormName="registration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="newUser.UserName" class="form-control" />
                <ValidationMessage For="() => newUser.UserName" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label" >Email:</label>
                <InputText id="email" @bind-Value="newUser.Email" type="email" class="form-control" />
                <ValidationMessage For="() => newUser.Email" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="newUser.PasswordHash" type="password" class="form-control" />
                <ValidationMessage For="() => newUser.PasswordHash" />
            </div>
            
            <button type="submit" class="btn btn-primary mt-2">Create user</button>
        </EditForm>
    </div>
</div>
@code {
    private UserDetails newUser = new UserDetails();

    private async Task HandleSubmit()
    {
        Console.WriteLine(newUser);
            var user = new Users
            {
                UserName = newUser.UserName,
                Email = newUser.Email,
                Password = newUser.PasswordHash,
            };
            await UserController.AddUserAsync(user);
            NavigationManager.NavigateTo("/");
    }
}